/* This was basically just imported from google, defines the font that can be called
at any time 
*/
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap');

/* Creating some custom properties */
/* So like each of these these properties in the ':root' can be called so that the values don't have to be repeated all the time */
:root{
    --light-color: #fff;
    --light-color-alt:#afb6cd;
    --primary-background-color: #131417;
    --secondary-background-color: #252830;
    --hover-light-color: var(--light-color);
    --hover-dark-color: var(--primary-background-color);
    --gradient-color: linear-gradient(
        115deg,#4fcf70,#fad648,#a767e5,#12bcfe,#44ce7b);
    --transparent-light-color: rgba(255,255,255,.05);
    --transparent-dark-color: rgba(0,0,0,.75);
    --font-family: 'Poppins', sans-serif;
    --font-size-xsm: 1.2rem;
    --font-size-sm: 1.6rem;
    --font-size-md: 2.4rem;
    --font-size-lg: 3rem;
    --font-size-xl: 4rem;
    --gap: 2rem;
    --margin-sm: 2rem;
    --margin-md: 3rem;
    --item-min-height-sm: 20rem;
    --item-min-height-md: 30rem;
}

/* For the typing animation */
/* .text-container{
    display: inline-block;
    

   margin-top: 70px;
    width: 70%;
    padding: 30px;
    text-align: center;
    
    
} */
/* .text-container .text{
     
    overflow: hidden;
    

    font-size: 20px;
    width: 300px;
    border: 1px solid red; 
    border-right: 0.15em solid var(--light-color);
    white-space: nowrap;
    animation: typing 3s steps(60,) infinite;


    
} */
/* @keyframes typing{
    from{
        width: 0%;
    }
    to{
        width: 100%;
    }

} */

/* Creating some base styles */
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html{
    /* font-size: 10px; */
    font-size: 62.5%;
}
body{
    font-family: var(--font-family);
    font-size: var(--font-size-sm);
    color: var(--light-color-alt);
    background-color: var(--primary-background-color);
    letter-spacing: 1px;
    /* This transition is for toggling between light mode and dark mode */
    transition: background-color .25s , color .25;
}
a{
    text-decoration: none;
    /* Basically color inherit means that the color 
    should be inherited from its parent class, 
    so all a tags should inherit the color from their parents
     */
    color: inherit;
}
img{
    max-width: 100%;
    display: block;
}
ul{
    list-style-type: none;
}
input,
button{
    font: inherit;
    color: inherit;
    border: none;
    background-color: transparent;
    outline: none;
}
i{
    font-size: var(--font-size-md);
    cursor: pointer;
    
}

body.light-theme{
    --light-color: #3d3d3d;
    --light-color-alt:rgba(0,0,0,.6);
    --primary-background-color: #fff;
    --secondary-background-color: #f1f1f1;
    --hover-light-color:#fff;
    --transparent-light-color:#252830;
    --transparent-dark-color: rgba(0,0,0,.1);
    transition: 0.3s ease-out;
}

/* Reusable classes */
.container{
    width: 100%;
    margin: 0 auto;
    /* border: 1px solid red; */
    padding: 0 1.5 rem;
}
.btn.place-items-center{
    /* border: 1px solid red; */
    display: inline-flex;
    align-items: center;
    justify-content:center ;
}
.screen-sm-hidden{
    display: none;
}

section{
   
    padding: 5rem;
}
.header{
    background-color: var(--secondary-background-color);
    position: fixed;
  
    top: 0;
    left: 0;
    width: 100%;
    /* border: 1px solid red; */
    z-index: 999;
}
.navbar{
    display: flex;
    align-items: cneter;
    justify-content: space-between;
    padding: 10px;

}
.logo{  
    font-size: var(--font-size-md);
    color: var(--light-color);
}
/* Designs the menu that will be in the hamburger section */
.menu{
position: absolute;
top: 8.5rem;
right: 1.5rem;
width: 23rem;
background-color: var(--secondary-background-color);
padding: 1.5rem;


/* Sets the opactity of the links to zero, not visible but its still there and clickable
will be useful for JavaScript
*/
 opacity: 0; 
/* This scales down the size of the clickable links so that it isn't clickable
will be useful for JavaScript
*/
 transform: scale(0); 
transition: 0.3s ease-in;
}

.list{
    display: flex;
    align-items: center;
    gap: var(--gap);  

}

.list.list-right{
  display: block;
  text-align: center;

}




/* The arranges the links in a colunmn format */
.menu .list{
    flex-direction: column;
 }
/* The link that is active will have this color */
.list-link.current{
    color: var(--light-color)
}
.close-menu-icon{
    display: none;
   
}
.list-link:hover{
    color: var(--light-color);
 
    border-bottom: 1px solid white;
    transition: 0.3s ease-in-out;
     font-size: 20px; 
}

.btn:hover,
.btn:hover span
{
    color: var(--light-color);
  
 
   
    transition: 0.3s ease-in-out;
    
  
}

/* I am setting the display to none because dark mode is the default so the sun 
icon which is for light theme needs to be showing so that user can change to 
light theme
*/
.moon-icon{
    display:  none;
}
/* When the body has the light theme the sun should be displayed as none  
important for the JavaScript aspect
*/
.light-theme .sun-icon{
    display: none;
}
/* You understand rii?
Moon theme has to show
*/
.light-theme .moon-icon{
    display: block;
}

/* I want to add a box shadow to the header when the user scrolls
    when it is activated
 */
.header.activated{
    box-shadow: 0 1px .5rem var(--transparent-light-color);
    
}
/* Also a box shadow was added to the menu bar too 
    when it is activated
*/
.menu.activated{
    box-shadow: 1px 1px 1rem var(--transparent-light-color);
/* Sets the opactity of the links to zero, not visible but its still there and clickable
will be useful for JavaScript
*/
opacity: 1;
/* This scales down the size of the clickable links so that it isn't clickable
will be useful for JavaScript
*/
transform: scale(1);
}
/* When the menu is open the open-menu-icon shouldn't be displayed */
.menu-toggle-icon.activated .open-menu-icon{
    display: none;
}
/* When the menu is open the close-menu-icon should be displayed */
.menu-toggle-icon.activated .close-menu-icon{
    display: block;
}

/*  Styling the search */

.search{
    height: 200rem;
}

.search-form-container{
    width: 100%;
    max-width: 100%;
    height: 100vh;
    background-color: var(--primary-background-color);
    position: fixed;
    top: 0;
    left: 0;
    z-index: 9999;
    display: flex;
      opacity: 0; 
     transform: scale(0); 
     transition: opacity .5s;  
}
.form-container-inner{

    margin: auto;
    display: flex;
    flex-direction: column;
    gap:var(--gap);
    text-align: center;
}

.form{
    display: flex;
    justify-content: center;
}

.form-input, .form-btn{
    display: inline-block;
    border: 1px solid var(--secondary-background-color);
    padding: 2.5rem;   
}

.form-input{
    border-radius: 1px;
    border-right: none;
    width: 100%;
    background-color: var(--primary-background-color);
}

.form-btn{
    border-left: none;
    background-color: var(--secondary-background-color);
    width: 8rem;
}

/* The note under the form  */

.form-note{
    font-size: var(--font-size-xsm);
    align-self: center;
}

/* This was designing the close button made the button go top right */

.form-close-btn{
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;
    border: 1px solid var(--secondary-background-color);
    width: 4rem;
    height: 4rem;
    display: flex;
}

/* JavaScript styles  when the search form is activated*/
.search-form-container.activated{
    opacity: 1;
    transform: scale(1);
}


/* Featured articles */
.featured-articles{
    padding: 2rem;
    /* border: 1px solid red; */
}
.section-header-offset{
    margin-top: 7.4rem;
}
.featured-articles-container,
.featured-content{
    
     gap: 2rem  ;
   
}
.headline-banner{
    background-color: var(--secondary-background-color);
    margin-bottom: 2rem;
    /* margin-top: 7.4rem; */
    display: flex;
    align-items: center;
    gap: var(--gap);
    font-size: var(--font-size-xsm);  
    font-size: var(--font-size-xsm);  
    

    
    font-size: var(--font-size-xsm);      
    

    
}

.headline{
    color: var(--light-color);
    font-size: 1rem;
    text-transform: uppercase;
    text-align: center;
    padding: .4rem;
    height: 100%;
}

.headline span{    
    height: inherit;
}
.headline.fancy-border{
    position: relative; 
    overflow: hidden;
    /* border: 1px solid red; */
}
.fancy-border::before{
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 200%;
    height: 100%;
    background: var(--gradient-color);
    background-size: 50% 100%;
    z-index: 5;
}

.fancy-border span{
    position: relative;
    z-index: 10;
    display: inline-flex;
    padding: .6rem 1.5rem;
    background-color: var(--secondary-background-color);
}

.article{
    position:relative;
    min-height: var(--item-min-height-md);
}
.article-image{
    position: relative;
    top: 1rem;
    margin-bottom: 2rem;
    width: 100%;
    height: 100%;
    object-fit: cover; 
    transition: transform .25s;
}
.article-category{
    position: absolute;
    top: 2rem;
    
     right:1rem;  
    padding: 1rem;
    font-size:1rem;
    background-color: var(--primary-background-color);
    color: var(--light-color);
    text-transform: uppercase;
    z-index: 10;
}

.article-data-container{
    /* border: 1px solid red ; */
    position: absolute;
    bottom: 0;
    left: 0;
       /* * left: 1rem; */ 
    padding: 2rem 1.5rem;
    background: var(--transparent-dark-color);
    z-index: 10;
    width: 100%;
    transition: background-color .5s;
}



.article:hover .article-data-container{
    background-color: var(--hover-dark-color);
    color: var(--hover-light-color);
    
}
.article:hover .article-data-spacer{
    background-color: var(--hover-light-color);
    /* color: var(--hover-light-color);     */
}
.article-data{
    /* border: 1px solid   red    ; */
    /* justify-content: space-between; */
    margin-bottom: 1rem;
    align-items: center;
    padding: 1rem 0;
    display: flex;
    font-size: var(--font-size-xsm);  
}
.article-data-spacer    {
    /* border: 1px solid red; */
    margin-left: 1rem;
    margin-right: 1rem;
    width: .5rem;
    height: .5rem;
    background-color: var(--light-color-alt);
    transform: rotate(45deg) ;
}
.title{
   width: 100%;
    /* border: 1px solid red; */

    color: var(--light-color);
}
.article-title{
 

    font-size: var(--font-size-md);
}


/* Sidebar */
.sidebar{
    background-color: var(--secondary-background-color);
    padding: 2.5rem;
    }

.trending-news-box{
    display: flex;
    flex-direction: column;
    gap: var(--gap);
    padding-block: 2rem;
    /* border: 1px solid var(--transparent-light-color); */
}
.trending-news-box:last-of-type{
    border-bottom:none;
}
.trending-news-img-box{
    /* border: 1px solid red; */
position: relative;
width: 100%;
height: var(--item-min-height-sm);
/* object-fit: contain;  */
}
.featured-content-title{
    font-size: var(--font-size-md);
    text-align: center;
    padding: 1rem;
}
.trending-number{
        /* border: 1px solid red; */
    position: absolute;
    top: -1rem;
    left: -1rem;
    z-index: 15;
    width: 3rem;
    height: 3rem;
    background-color: var(--secondary-background-color);
    color: var(--light-color);
    border-radius: 50%;
}

.trending-new-data .article-title{
    font-size:  var(--font-size-sm);
}
.trending-news-box:hover .article-title{
    color: var(--light-color-alt);
}



/* Quick Read */
.section-title{
    position: relative;
    font-size: var(--font-size-md);
    margin-bottom: 6rem;
    /* border: 1px solid red; */
    }
.section-title::before{
    content: attr(data-name);
    font-size: var(--font-size-lg);
    text-transform: uppercase;
    opacity: .1;
    position: absolute;
    top: 1.5rem;
    left: 2rem;
}

.article.swiper-slide{
    height: 40rem;
}
.swiper-wrapper{
    height: auto;
}
.swiper-controls{
    width: 3.5rem ;
    height: 3.5rem;
    background-color: var(--secondary-background-color);

}

.swiper-controls::after{
    font-size: 1.6rem;
    color: var(--light-color);
    
}